services:
  broker:
    image: ${KAFKA_IMAGE}
    hostname: ${KAFKA_BROKER_HOSTNAME}
    container_name: ${KAFKA_CONTAINER_NAME}
    ports:
      - "${KAFKA_EXTERNAL_LISTENER_PORT}:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://${KAFKA_BROKER_HOSTNAME}:29092,PLAINTEXT_HOST://${KAFKA_BROKER_URL}:${KAFKA_EXTERNAL_LISTENER_PORT}'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@${KAFKA_BROKER_HOSTNAME}:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://${KAFKA_BROKER_HOSTNAME}:29092,CONTROLLER://${KAFKA_BROKER_HOSTNAME}:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    networks:
      - ${NETWORK_NAME}
  kafka-ui:
    image: ${KAFKA_UI_IMAGE}
    container_name: ${KAFKA_UI_CONTAINER_NAME}
    hostname: ${KAFKA_UI_HOSTNAME}
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_BROKER_HOSTNAME}:29092
      KAFKA_CLUSTERS_0_KRAFT_ENABLED: 'true'
    ports:
      - "${KAFKA_UI_PORT}:8080"
    networks:
      - ${NETWORK_NAME}

  buildingstreamer:
    build:
      context: ./buildingstreamer
      dockerfile: Dockerfile
    image: schi11er/portfoliobim_info_backend:latest
    container_name: ${BUILDING_STREAMER_CONTAINER_NAME}
    hostname: ${BUILDING_STREAMER_HOSTNAME}
    ports:
      - "${BUILDING_STREAMER_SERVER_PORT}:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BROKER_HOSTNAME}:29092
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_BROKER_URL: ${KAFKA_BROKER_URL}
      BUILDING_STREAMER_EXTERNAL_PORT: ${BUILDING_STREAMER_SERVER_PORT}
    depends_on:
      - broker
    networks:
      - ${NETWORK_NAME}
    restart: unless-stopped

  infomap:
    image: schi11er/portfoliobim_infomap:latest
    container_name: infomap
    ports:
      - "${INFOMAP_PORT}:80"
    depends_on:
      - buildingstreamer
    networks:
      - ${NETWORK_NAME}
    restart: unless-stopped
    environment:
      - REACT_APP_DATACAT_API_URL=${REACT_APP_DATACAT_API_URL}

networks:
  zim-network:
    name: ${NETWORK_NAME}
    driver: bridge